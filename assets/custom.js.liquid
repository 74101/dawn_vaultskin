function changeImageCollectionCard(element) {
  let cardElement = element.parentElement.parentElement.parentElement
  let linkElements = cardElement.querySelectorAll('a')
  let imageElement = cardElement.querySelector('.card__media img')
  let imageUrl = element.dataset.image
  let variantUrl = element.dataset.url

  linkElements.forEach(linkElement => {
    linkElement.href = variantUrl
  })

  Array.from(element.parentNode.children).forEach(sibling => {
    if (sibling !== element) {
      sibling.classList.remove('active')
    }
  })

  element.classList.add('active')
  // imageElement.classList.add('loading')
  // setTimeout(() => {imageElement.classList.remove('loading')}, 300)
  
  imageElement.src = imageUrl;
}

function changeVariant() { 
  let slideshowContainerElements = document.querySelectorAll('.slideshow_container')
  let productImagesElements = document.querySelectorAll('.product_images')
  let productVariantOptionsCustomElements = document.querySelectorAll('.product-variant-options-custom')
  let variantProductFeaturesElements = document.querySelectorAll('.variant_product_features')
  
  if (productVariantOptionsCustomElements) {
    productVariantOptionsCustomElements.forEach(elem => {
      elem.addEventListener('click', function (evt) {
        if (slideshowContainerElements[this.dataset.index]) {
          slideshowContainerElements.forEach(el => {
            el.classList.remove('active')
          })
          slideshowContainerElements[this.dataset.index].classList.add('active')
        }
        if (productImagesElements[this.dataset.index]) {
          productImagesElements.forEach(el => {
            el.classList.remove('active')
          })
          productImagesElements[this.dataset.index].classList.add('active')
        }
        if (variantProductFeaturesElements[this.dataset.index]) {
          variantProductFeaturesElements.forEach(el => {
            el.classList.remove('active')
          })
          variantProductFeaturesElements[this.dataset.index].classList.add('active')
        }
      })
    })
  }
}
changeVariant()

function offset(el) {
    var rect = el.getBoundingClientRect(),
    scrollTop = window.pageYOffset || document.documentElement.scrollTop
    return rect.top + scrollTop
}

function productTabsScroll() {
  const anchors = document.querySelectorAll('.product_tabs a[href*="#"]')
  for (let anchor of anchors) {
    anchor.addEventListener('click', function (evt) {
      // evt.preventDefault()
      const is_scroll_link = anchor.classList.contains('scroll_link')
      const is_tab_link = anchor.classList.contains('tab_link')
      const blockID = anchor.getAttribute('href').substr(1)
      const block = document.querySelector(`.${blockID}`)
      const headerHeight = document.querySelector('.section-header').offsetHeight
      const NAV_HEIGHT = 38

      if (is_scroll_link) {
        if (blockID == 'to_top') {
          window.scrollTo({
            top: 0,
            left: 0,
            behavior: "smooth"
          });
        } else if (block) {
          setTimeout(() => {
            const blockTop = offset(block) - headerHeight - NAV_HEIGHT
            window.scrollTo({
              top: blockTop,
              left: 0,
              behavior: "smooth"
            })
          }, 100)
        }
      }
      if (is_tab_link) {
        const tabContentElements = document.querySelectorAll('.tab_content')
        tabContentElements.forEach(elem => {
          elem.classList.remove('tab_content_active')
        })
        block.classList.add('tab_content_active')
      }
    })
  }
}
productTabsScroll()

const swiper_product_gallery = new Swiper(".swiper_product_gallery", {
  spaceBetween: 20,
  pagination: {
    el: ".swiper-pagination",
    clickable: true,
  },
  loop: true,
  autoplay: {
    delay: 3500,
    disableOnInteraction: false,
  },
})

const buy_now_btn = document.querySelectorAll('.buy_now_btn')
const add_to_cart_btn = document.querySelector('.product-form__submit')
if (buy_now_btn) {
  buy_now_btn.forEach(element => {
    element.addEventListener('click', function(evt) {
      if (add_to_cart_btn) {
        add_to_cart_btn.click()
      }
    })
  })
}

function halvedNumbersAnimate() {
  // Getting the right element
  let halved_numbers = document.querySelectorAll('.halved__num')
  let Visible = function (target) {
    // All item positions
    let targetPosition = {
        top: window.pageYOffset + target.getBoundingClientRect().top,
        left: window.pageXOffset + target.getBoundingClientRect().left,
        right: window.pageXOffset + target.getBoundingClientRect().right,
        bottom: window.pageYOffset + target.getBoundingClientRect().bottom
      },
      // Get window positions
      windowPosition = {
        top: window.pageYOffset,
        left: window.pageXOffset,
        right: window.pageXOffset + document.documentElement.clientWidth,
        bottom: window.pageYOffset + document.documentElement.clientHeight
      };
  
    if (targetPosition.bottom > windowPosition.top &&
      targetPosition.top < windowPosition.bottom &&
      targetPosition.right > windowPosition.left &&
      targetPosition.left < windowPosition.right) {
      setTimeout(()=>{target.classList.add('is-visible')}, 400)
    } else {
      setTimeout(()=>{target.classList.remove('is-visible')}, 400)
    }
  }
  
  window.addEventListener('scroll', function() {
    halved_numbers.forEach(element => {
      Visible(element)
    })
  })
  
  halved_numbers.forEach(element => {
    Visible(element)
  })
}
halvedNumbersAnimate()

let vc_table_header_rows = document.querySelectorAll('.table_row_header')

if (vc_table_header_rows) {
  vc_table_header_rows.forEach(row => {
    const header_cells = row.children
    let element = row
    while(element.nextElementSibling.classList.contains('table_row_body')) {
      element = element.nextElementSibling
      const body_cells = element.children
      for (let i = 0; i < header_cells.length; i++) {
        let cell_name = header_cells[i].innerText.trim()
        if (cell_name != '') {
          body_cells[i].dataset.cell_name = cell_name + ':'
        }
      }
    }
  })
}

const checkElementInterval = setInterval(function() {
  const element = document.querySelector('.wc_review_list_section');
  if (element) {
    clearInterval(checkElementInterval);
    const check = setInterval(function() {
      let slider = element.swiper;
      if (slider) {
        clearInterval(check);
        let breakpoints = slider.params.breakpoints;
        const zeroPoint = {slidesPerView: 1, slidesPerGroup: 1};
        Object.assign(breakpoints, { 0: zeroPoint });
        slider.update();
      }
    }, 100);
  }
}, 100);


window.colorChange = function() {
    const custom_variants = document.querySelectorAll('.custom_variants');
    const facets_buttons = document.querySelectorAll('.active-facets-desktop .active-facets__button-inner');
    const colors = [];
    if (facets_buttons) {
      facets_buttons.forEach(facets_button => {
        colors.push(facets_button.dataset.color);
      })
    }
    colors.forEach(color => {
      if (custom_variants) {
        custom_variants.forEach(custom_variant => {
          const active_variant = custom_variant.querySelector(`.variant_btn.${color}`)
          if (active_variant) {
            active_variant.click()
          }
        })
      }
    });

}
colorChange()


function sortCountries() {
    let priorityCountries = ['DE', 'US', 'GB'];
    let countriesList = document.querySelectorAll('.disclosure__link');

    priorityCountries.forEach(country => {
      countriesList.forEach(countrySelect => {
        if (countrySelect.dataset.value == country) {
          let countryListItem = countrySelect.parentElement;
          countryListItem.remove()
          console.log(countryListItem)
        }

      // //         option.detach();
      // //         countrySelect.prepend(option);

      });
    });
}
sortCountries()